// Clearfix

@mixin clearfix() {
  &:before,
  &:after {
    content: " "; /* 1 */
    display: table; /* 2 */
  }

  &:after {
    clear: both;
  }
}


// Antialiasing Fonts

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

@mixin modules-margin {
  margin-top: 72px;
}

// BREAKPOINTS

$breakpoints: (
  'xxlarge': (max-width: 1350px),
  'xlarge': (max-width: 1200px),
  'large': (max-width: 1050px),
  'medium': (max-width: 850px),
  'small': (max-width: 767px),
  'xsmall': (max-width: 600px),
  'xxsmall': (max-width: 350px),
);

/// Responsive-Manager.
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(type-of($raw-query) == 'string', unquote($raw-query), inspect($raw-query));

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}